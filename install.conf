#!/usr/bin/env bash
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################ DOWNLOAD CONFIGURATION ####################################################
# Start the http download service on the specified server,
# Will download all the dependencies in the http server,
# Run the install script on other servers.
# Automatically download dependencies from http,
# Solve the problem that all servers are slow to download online.
# At the same time, you can also manually download the dependencies to the downloads directory.
# Offline installation of the system
#DOWNLOAD_SERVER_IP=""
DOWNLOAD_SERVER_PORT="19000"

################################ DNS CONFIGURATION #################################################
LOCAL_DNS_HOST="172.17.0.9"   # /etc/resolv.conf
# see YARN_REGISTRY_DNS_HOST

################################# YARN CONFIGURATION #############################################
YARN_RESOURCE_MANAGER_HOSTS=(10.196.69.173 10.196.69.174)
YARN_NODE_MANAGER_HOSTS=(10.196.69.173 10.196.69.174)
# hadoop.registry.dns.bind-port & hadoop.registry.dns.bind-address in yarn-site.xml
YARN_REGISTRY_DNS_HOST="10.196.69.173" # yarn dns server ip address
YARN_REGISTRY_DNS_HOST_PORT="53"
YARN_TIMELINE_HOST="10.196.69.173" # timeline-v1.5 & v2.0
YARN_JOB_HISTORY_HOST="10.196.69.173"
YARN_SPARK_HISTORY_HOST="10.196.69.173"

# local.realm in core-site.xml
LOCAL_REALM="BDMS.163.COM"

# fs.defaultFS in core-site.xml
FS_DEFAULTFS="hdfs://mldev"

# local.cluster-id in yarn-site.xml
LOCAL_CLUSTER_ID="jd-ml-yarn"

# yarn.app.mapreduce.am.staging-dir in mapred-site.xml
YARN_APP_MAPREDUCE_AM_STAGING_DIR="/tmp/yarn-staging"

# yarn container-executor config
# How to compile container-executor:
# Go to the hadoop/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager
# path and enter the command: `mvn package -Pnative -DskipTests`
# Only the nodemanager is compiled. The path of the compiled container-executor is:
# ./target/native/target/usr/local/bin/container-executor
YARN_CONTAINER_EXECUTOR_PATH="Please enter the full path to the container-executor here"

# Keep the same configuration as 'yarn.nodemanager.linux-container-executor.cgroups.hierarchy'
# in yarn-site.xml, default '/hadoop-yarn'
YARN_HIERARCHY="/hadoop-yarn"

# Keep the same configuration as 'yarn.nodemanager.local-dirs' in yarn-site.xml
YARN_NODEMANAGER_LOCAL_DIRS="/home/hadoop/disk/1/yarn/local,/home/hadoop/disk/2/yarn/local,/home/hadoop/disk/3/yarn/local"

# Keep the same configuration as 'yarn.nodemanager.log-dirs' in yarn-site.xml
YARN_NODEMANAGER_LOG_DIRS="/home/hadoop/disk/1/yarn/logs,/home/hadoop/disk/2/yarn/logs,/home/hadoop/disk/3/yarn/logs"

# Create '/app-logs' path on hdfs, Owner is 'yarn', group is 'hadoop', 
# and 'hadoop' group needs to include 'hdfs, yarn, mapred' yarn-site.xml users, etc.
# `yarn.nodemanager.remote-app-log-dir` in yarn-site.xml
YARN_AGGREGATED_LOG_DIR="/app-logs"

# time line service configure
YARN_TIMELINE_SERVICE_HBASE_COPROCESSOR_LOCATION="/hbase/coprocessor/"

# hbase client
YARN_TIMELINE_SERVICE_HBASE_CONFIGURATION_FILE="file:/usr/ndp/current/hbase_client/conf/hbase-site.xml"

# yarn.resourcemanager.zk-address in yarn-site.xml
# hadoop.registry.zk.quorum in core-site.xml
YARN_ZK_ADDRESS="ml2.jd.163.org:2181,ml3.jd.163.org:2181,ml4.jd.163.org:2181"

# yarn.timeline-service.leveldb-state-store.path in yarn-site.xml
YARN_TIMELINE_SERVICE_LEVELDB_STATE_STORE_PATH="/home/hadoop/timeline"

# yarn.nodemanager.recovery.dir in yarn-site.xml
YARN_NODEMANAGER_RECOVERY_DIR="/home/hadoop/yarn/yarn-nm-recovery"

YARN_RESOURCEMANAGER_NODES_EXCLUDE_PATH="/home/hadoop/hosts/yarn_exclude"

YARN_GC_LOG_DIR="/home/hadoop/yarn/gclog"

################################### YARN-kerberos CONFIGURATION ##############################################
HADOOP_KEYTAB_LOCATION=""
HADOOP_PRINCIPAL=""

MAPRED_KEYTAB_LOCATION=""

# yarn.timeline-service.keytab in yarn-site.xml
YARN_KEYTAB_LOCATION=""

HTTP_KEYTAB_LOCATION=""
HTTP_PRINCIPAL=""

################################### YARN-hadoop CONFIGURATION ##############################################
HADOOP_HOME="/home/hadoop/hadoop-current"

# hadoop.http.authentication.signature.secret.file in core-site.xml
HADOOP_HTTP_AUTHENTICATION_SIGNATURE_SECRET_FILE="/home/hadoop/yarn/conf/http-secret"

################################# YARN-hbase CONFIGURATION ##############################################
# copy timeline hbase jar to ${hbase_client]/lib path
HBASE_HOME="/usr/ndp/current/hbase_client"

################################ ETCD CONFIGURATION ####################################################
## etcd hosts list
ETCD_HOSTS=(10.196.69.173 10.196.69.174 10.196.69.175)

ETCD_TAR_GZ="etcd-v3.3.9-linux-amd64.tar.gz"
ETCD_DOWNLOAD_URL="https://github.com/etcd-io/etcd/releases/download/v3.3.9/${ETCD_TAR_GZ}"

################################## CALICO CONFIGURATION ##########################################
CALICO_IPV4POOL_CIDR="192.20.0.0"
CALICO_NETWORK_NAME="calico-network"
CALICO_DOWNLOAD_URL="https://github.com/projectcalico/cni-plugin/releases/download/v1.11.7/calico"
CALICO_IPAM_DOWNLOAD_URL="https://github.com/projectcalico/cni-plugin/releases/download/v1.11.7/calico-ipam"
CALICOCTL_DOWNLOAD_URL="https://github.com/projectcalico/calicoctl/releases/download/v3.2.3/calicoctl"

################################ DOCKER CONFIG SEGMENT ###################################################
# docker registry ip:port
DOCKER_REGISTRY="10.120.196.232:5000"

##### System component download url address, Generally do not need to be modified #####
DOCKER_REPO="https://download.docker.com/linux/centos/7/x86_64/stable/Packages/"
DOCKER_VERSION="docker-ce"
DOCKER_VERSION_NUM="18.06.1.ce"
DOCKER_ENGINE_RPM="${DOCKER_VERSION}-${DOCKER_VERSION_NUM}-3.el7.x86_64.rpm"

################################# NVIDIA CONFIGURATION #############################################
NVIDIA_DETECT_URL="http://mirror.rackspace.com/elrepo/elrepo/el7/x86_64/RPMS/"
# NVIDIA_DRIVER_VERSION can be used by download server to decide which version of 
# nvidia driver should be download
NVIDIA_DRIVER_VERSION=""
NVIDIA_DOCKER_VERSION="2.0.3"
NVIDIA_DOCKER_GIT_SNAPSHOT_URL="https://api.github.com/repos/nvidia/"
